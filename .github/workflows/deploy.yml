name: Deploy

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Podman
        run: |
          sudo apt-get update
          sudo apt-get install -y podman

      - name: Log in to GitHub Container Registry
        run: |
          echo "${{ secrets.GHCR_TOKEN }}" | podman login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and push image
        run: |
          podman build -t ghcr.io/${{ github.repository }}:latest .
          podman push ghcr.io/${{ github.repository }}:latest

      - name: Setup SSH key
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "${EC2_SSH_KEY}" | tr -d '\r' > ~/.ssh/ec2_key
          chmod 600 ~/.ssh/ec2_key
          ssh-keygen -y -f ~/.ssh/ec2_key > /dev/null || (echo "Invalid private key format" && exit 1)

      - name: Deploy
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          ENV_FILE: ${{ secrets.ENV_FILE_CONTENTS }}
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
        run: |
          ssh -i ~/.ssh/ec2_key -o StrictHostKeyChecking=no ${EC2_USER}@${EC2_HOST} "echo 'SSH connection successful!'"

          ssh -i ~/.ssh/ec2_key -o StrictHostKeyChecking=no ${EC2_USER}@${EC2_HOST} /bin/bash <<EOF
            echo "${ENV_FILE}" > .env
            echo "${GHCR_TOKEN}" | podman login ghcr.io -u ${{ github.actor }} --password-stdin
            podman stop $(podman ps -q)
            podman pull ghcr.io/${{ github.repository }}:latest
            podman stop peeple || true
            podman rm peeple || true

            sudo fuser -k 8080/tcp || true

            podman run -d \
              --restart=always \
              -p 8080:8080 \
              --env-file ./.env \
              --name peeple \
              ghcr.io/${{ github.repository }}:latest
          EOF
